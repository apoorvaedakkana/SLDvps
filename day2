3 Tier Architecture ::

-> web server (nginx/Apache), app server (tomcat), db server
-> load balancer => to distribute the incoming application traffic to registered targets called servers.
-> auto scaling => automatically add or remove servers based on traffic ad defined policy : min size = 1, desired size = 2, max size = 4
-> cloud watch alarms =>
-> SNS (simple notification service) =>

Q1. What is vertical and horizontal scaling?
=> Vertical scaling :: vertically increasing server resources (RAM, ROM, etc)
=> Horizontal scaling :: increasing the servers (1lakh req per min)

cloud watch :
simple notification service :

Amazon SNS =>
subscriptions, protocol : email

https://aws.amazon.com/console/

https://ap-south-1.console.aws.amazon.com/sns/v3/home?region=ap-south-1#/subscriptions

---------------------------------------=

Elastic Load Balance (ELB)

Automatically distributes traffic across multiple targets (/server)
Provides high availability
Incorporates security features
performs health checks

Application load balancer => HTTP and HTTPS
Network Load Balancer => TCP and UDP
Gateway Load Balancer => IP
Load balancer

listner1 => target grp 1 => target, target

listner2 =>

Auto scaling : add/remove instances

Helps to control EC2 instances available to handle the load your application
Launches or terminates your AWS resources based on specified conditions
Registers instances load balancers when specified

Auto scaling components ::
send email and sms

search Subscription =>

select SNS

another new subscription, token or something

select SMS, EMAIL

select instance publish message

SERVER INSTANCE CREATION
search ec2 => select region Mumbai => launch instances =>

network settings => edit => create security grp => change security grp name => apoorva-something

advanced something

do nothing

placement group : dont create

datacenter : divided into multiple partitions of servers based on availability, it is called placement group ??

summary : instances = 1

launch instance
select tht blue link type something => connect => (nothing to change)

sudo su
yum update
yum install nginx -y

go to security group Tab => scroll down => change to security tab => click on security grp blue link => edit inbound rules

firewall configuration :: imp

instance id => scroll => security id => security grps =>

inbound rules => selct ssh, http, https => IP4 => add rule, save rule

type in EC2 instance connect tab

systemctl start nginx

u will get something like  =>
i-0e253cb5eb8da992a (apoorva)
PublicIPs: 3.110.101.59 PrivateIPs: 172.31.14.103

  go to browser type Public ip
open MobaXterm

session => select ssh => remote host = < public ip address>

advanced ssh settings => upload keypair (useprivate key)

=> OK

login as : ec2-user
go to instances in ec2 aws application => Instance => select your instance => connect => there u will find username (ec2-user)

To terminate instance => select instance => terminate.
commands:

#!/bin/bash
this is  for your user data (script from top to bottom)
install httpd (Linux 2 version)
yum update -y
yum install -y httpd
systemctl start httpd
systemctl enable httpd
echo "<h1>WELCOME TO LINUX CLASS $(hostname -f)</h1>" > /var/www/html/index.html

launch instance => without keypair => select http, https

network grp name : alb-apoorva-sg

at the end:
#!/bin/bash
Use this is for your user data (script from top to bottom)
install httpd (Linux 2 version)
yum update -y
yum install -y httpd
systemctl start httpd
systemctl enable httpd
echo "<h1>WELCOME TO LINUX CLASS $(hostname -f)</h1>" > /var/www/html/index.html

launch
select, actions => one more like this

apoorva2

at the end:
#!/bin/bash
Use this is for your user data (script from top to bottom)
install httpd (Linux 2 version)
yum update -y
yum install -y httpd
systemctl start httpd
systemctl enable httpd
echo "<h1>WELCOME TO AWS CLASS $(hostname -f)</h1>" > /var/www/html/index.html

create target group

alb-au-tg

select navbar => Load Balancer

create 1

after status = active paste dns name in browser.

alb-testing-au-1768857211.ap-south-1.elb.amazonaws.com
